#!/usr/bin/perl -w
#################################################################################################################
#	Script to modify Revigo Result charts, and create a colapsed Gene_Id
#	collapsed chart within the REVIDO term.
#	Author Arturo Vera, Jan 2019
#	It follows the Alejandro Otero awk idea: cat correlated.tab | awk -F'\t' 'NR > 1 {if($2 != "1") {printf "\n%s",$0} else {printf ","$3}} END {printf "\n"}' | sed '/^$/d'
#	For running you need the GO vs Gene_ID correlated table generated by R script correlated_revigo.R
#
################################################################################################################
#Dependencies
use List::MoreUtils qw(uniq);
use strict;
use warnings;
local $" = "\,"; #Use this for print "," in the array (https://www.perlmonks.org/?node_id=668523)
#Reading tables
my($mod,@col,@col2,@id,@unicos);
my($file1)=@ARGV;
open(FILE,$file1);
open(TMP, ">tmp.tab");
$mod = "tmp.tab";
open(MOD,$mod);

#Parsing correlated table and collapsing groups
while(<FILE>){
	chomp;
	if($_ =~ /^G/){
		@col=split(/\t/);
		if($col[2]  ne  "TRUE"){ 
			print TMP "\n$col[0]\t$col[1]\t$col[2]\t$col[3]";
		}else{
			chomp;
			print TMP ",$col[3]";
			}
	}
}
close(FILE);
close(TMP);
#print "\n";
#Geting unique Gene_IDs in each category
while(<MOD>){
	chomp;
	if($_ =~ /^G/){
		@col2=split(/\t/);
		#print "$col2[1]\n";
		foreach($col2[3]){
			@id=split(/\,/);
			@unicos= uniq @id; 
		}
		print "$col2[0]\t$col2[1]\t@unicos\n";
	}
}
close(MOD);

			
